services:
  proxy:
    container_name: ${PROXY_URL}
    image: owasp/modsecurity-crs:apache
    ports:
      - "80:8080"
    environment:
      - BACKEND=http://${FRONTEND_URL}:4173

  frontend:
    container_name: ${FRONTEND_URL}
    env_file: ".env"
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - PROXY_URL=${PROXY_URL}
        - FRONTEND_URL=${FRONTEND_URL}
        - BACKEND_URL=${BACKEND_URL}
        - POSTGRES_URL=${POSTGRES_URL}
    ports:
      - "4173:4173"
    

  backend:
    container_name: ${BACKEND_URL}
    env_file: ".env"
    build:
      context: ./backend
      target: builder
      args:
        - PROXY_URL=${PROXY_URL}
        - FRONTEND_URL=${FRONTEND_URL}
        - BACKEND_URL=${BACKEND_URL}
        - POSTGRES_URL=${POSTGRES_URL}
    stop_signal: SIGINT
    ports:
      - 5000:5000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app

  postgres:
    container_name: ${POSTGRES_URL}
    image: postgres:17-alpine
    ports:
      - 5432:5432
    volumes:
      - database_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  database_data:
    driver: local
